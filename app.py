import streamlit as st
import smtplib
from email.message import EmailMessage
import dns.resolver
import logging
from datetime import datetime
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
import time
import requests
import os
from PIL import Image
import io

# C·∫•u h√¨nh logging
logging.basicConfig(
    filename="abuse_log.txt",
    level=logging.INFO,
    format="%(asctime)s | %(message)s",
    filemode="a"
)
logger = logging.getLogger()

# Th∆∞ m·ª•c l∆∞u screenshot
SCREENSHOT_DIR = "screenshots"
if not os.path.exists(SCREENSHOT_DIR):
    os.makedirs(SCREENSHOT_DIR)

# === Giao di·ªán nh·∫≠p li·ªáu ===
st.set_page_config(page_title="Fake Website Takedown Tool", page_icon="üîí")
st.title("üîí Fake Website Takedown Tool (Bulk)")

# L·∫•y danh s√°ch t√†i kho·∫£n t·ª´ secrets
accounts = {}
try:
    accounts = {
        st.secrets["gmail"]["account1"]["sender_email"]: st.secrets["gmail"]["account1"]["password"],
        st.secrets["gmail"]["account2"]["sender_email"]: st.secrets["gmail"]["account2"]["password"],
        st.secrets["gmail"]["account3"]["sender_email"]: st.secrets["gmail"]["account3"]["password"]
    }
except KeyError as e:
    st.warning(f"‚ö†Ô∏è L·ªói c·∫•u h√¨nh secrets: {e}. S·ª≠ d·ª•ng nh·∫≠p th·ªß c√¥ng.")

# Ch·ªçn ho·∫∑c nh·∫≠p sender_email
if accounts:
    sender_email = st.selectbox("üìß Ch·ªçn Gmail ƒë·ªÉ g·ª≠i", list(accounts.keys()))
    password = accounts[sender_email]
else:
    sender_email = st.text_input("üìß Nh·∫≠p Gmail c·ªßa b·∫°n")
    password = st.text_input("üîë Nh·∫≠p App Password", type="password")

domains_input = st.text_area("üåê Nh·∫≠p danh s√°ch t√™n mi·ªÅn gi·∫£ m·∫°o (m·ªói d√≤ng m·ªôt domain)", height=100)
abuse_type = st.selectbox("üö® Ch·ªçn lo·∫°i vi ph·∫°m", ["Phishing", "Malware", "Botnet", "Spam", "Pharming", "Counterfeit"])
evidence = st.text_area("üìé Nh·∫≠p b·∫±ng ch·ª©ng b·ªï sung (URL, m√¥ t·∫£, v.v.)", height=100)
description = st.text_area("üìù M√¥ t·∫£ h√†nh vi gi·∫£ m·∫°o", height=100)

# === Khi nh·∫•n n√∫t X·ª≠ l√Ω ===
if st.button("‚öîÔ∏è X·ª≠ l√Ω h√†ng lo·∫°t"):
    # Ki·ªÉm tra c√°c tr∆∞·ªùng b·∫Øt bu·ªôc
    if not all([sender_email, password, domains_input, abuse_type, description]):
        st.error("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng b·∫Øt bu·ªôc!")
    else:
        # Chia danh s√°ch domain
        domains = [d.strip() for d in domains_input.split("\n") if d.strip()]
        if not domains:
            st.error("‚ö†Ô∏è Vui l√≤ng nh·∫≠p √≠t nh·∫•t m·ªôt domain!")
            st.stop()

        results = []
        # C·∫•u h√¨nh Selenium
        chrome_options = Options()
        chrome_options.add_argument("--headless")
        driver = webdriver.Chrome(options=chrome_options)

        for domain in domains:
            # L·∫•y th√¥ng tin DNS provider t·ª´ NS records
            dns_provider = ""
            to_email = None
            try:
                answers = dns.resolver.resolve(domain, 'NS')
                ns_records = [str(rdata) for rdata in answers]
                for ns in ns_records:
                    if "cloudflare" in ns.lower():
                        dns_provider = "Cloudflare"
                        to_email = "registrar-abuse@cloudflare.com"
                        break
                if not to_email:
                    dns_provider = "Unknown"
                    to_email = "abuse@dnsprovider"
            except Exception as e:
                results.append(f"‚ùå Domain {domain}: L·ªói khi l·∫•y NS records: {e}")
                logger.error(f"Domain={domain}, Error=Failed to get NS records: {e}")
                continue

            # Ch·ª•p screenshot website
            screenshot_path = os.path.join(SCREENSHOT_DIR, f"{domain}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.png")
            try:
                driver.get(f"http://{domain}")
                time.sleep(2)
                driver.save_screenshot(screenshot_path)
                screenshot_status = "Captured"
            except Exception as e:
                screenshot_status = f"Failed: {e}"
                screenshot_path = None

            # T·∫°o n·ªôi dung b√°o c√°o
            report_body = f"""
Dear Sir/Madam,

I am reporting a fraudulent website: {domain}. The website is engaging in {abuse_type} activities, harming users and brand reputation.

Details:
- Abuse Type: {abuse_type}
- Domain: {domain}
- Description: {description}
- Evidence: {evidence if evidence else "No additional evidence provided"}
- Screenshot: {screenshot_path if screenshot_path else "Not available"}

Please investigate and take action to remove or block this website.

Sincerely,
[Your Name]
            """

            # ƒêi·ªÅn form online Cloudflare
            form_status = "Skipped"
            if dns_provider == "Cloudflare":
                try:
                    driver.get("https://www.cloudflare.com/abuse/")
                    time.sleep(2)
                    # Gi·∫£ ƒë·ªãnh c·∫•u tr√∫c form (c·∫ßn ki·ªÉm tra th·ª±c t·∫ø)
                    driver.find_element(By.NAME, "domain").send_keys(domain)
                    driver.find_element(By.NAME, "abuse_type").send_keys(abuse_type)
                    driver.find_element(By.NAME, "description").send_keys(description)
                    if evidence:
                        driver.find_element(By.NAME, "evidence").send_keys(evidence)
                    if screenshot_path:
                        driver.find_element(By.NAME, "file").send_keys(screenshot_path)
                    driver.find_element(By.XPATH, "//button[@type='submit']").click()
                    time.sleep(2)
                    form_status = "Submitted"
                except Exception as e:
                    form_status = f"Failed: {e}"
                    logger.error(f"Domain={domain}, FormError=Failed to fill Cloudflare form: {e}")

            # B√°o c√°o Google Safe Browsing
            google_status = "Skipped"
            try:
                driver.get("https://safebrowsing.google.com/safebrowsing/report_phish/")
                time.sleep(2)
                driver.find_element(By.NAME, "url").send_keys(f"http://{domain}")
                driver.find_element(By.NAME, "details").send_keys(description)
                driver.find_element(By.XPATH, "//button[@type='submit']").click()
                time.sleep(2)
                google_status = "Submitted"
            except Exception as e:
                google_status = f"Failed: {e}"
                logger.error(f"Domain={domain}, GoogleError=Failed to report to Google: {e}")

            # G·ª≠i email n·∫øu form th·∫•t b·∫°i ho·∫∑c kh√¥ng ph·∫£i Cloudflare
            email_status = "Skipped"
            if form_status.startswith("Failed") or dns_provider != "Cloudflare":
                try:
                    msg = EmailMessage()
                    msg['From'] = sender_email
                    msg['To'] = to_email
                    msg['Subject'] = f"Fraudulent Website Report ‚Äì {domain}"
                    msg.set_content(report_body)
                    if screenshot_path:
                        with open(screenshot_path, 'rb') as f:
                            img_data = f.read()
                        msg.add_attachment(img_data, maintype='image', subtype='png', filename=os.path.basename(screenshot_path))

                    with smtplib.SMTP("smtp.gmail.com", 587) as server:
                        server.starttls()
                        server.login(sender_email, password)
                        server.send_message(msg)

                    email_status = "Sent"
                except Exception as e:
                    email_status = f"Failed: {e}"
                    logger.error(f"Domain={domain}, EmailError=Failed to send email: {e}")

            # Ki·ªÉm tra tr·∫°ng th√°i domain
            domain_status = "Active"
            try:
                requests.get(f"http://{domain}", timeout=5)
            except requests.ConnectionError:
                domain_status = "Down"

            # Ghi log
            log_message = (
                f"Report processed: Domain={domain}, DNSProvider={dns_provider}, "
                f"To={to_email}, AbuseType={abuse_type}, Screenshot={screenshot_status}, "
                f"FormStatus={form_status}, GoogleStatus={google_status}, EmailStatus={email_status}, "
                f"DomainStatus={domain_status}, Evidence={evidence}, Description={description}, Content=\n{report_body}"
            )
            logger.info(log_message)
            results.append(
                f"‚úÖ Domain {domain}: DNSProvider={dns_provider}, Screenshot={screenshot_status}, "
                f"Form={form_status}, Google={google_status}, Email={email_status}, Status={domain_status}"
            )

        driver.quit()
        # Hi·ªÉn th·ªã k·∫øt qu·∫£
        st.write("### K·∫øt qu·∫£ x·ª≠ l√Ω:")
        for result in results:
            st.write(result)
        if any("Cloudflare" in r for r in results):
            st.info("‚ÑπÔ∏è Ki·ªÉm tra form online c·ªßa Cloudflare: https://www.cloudflare.com/abuse/")
        st.info("‚ÑπÔ∏è G·ª≠i b√°o c√°o th·ªß c√¥ng t·ªõi NetBeacon: https://netbeacon.org")
